{"version":3,"sources":["components/SearchEmployee/index.js","components/Header/index.js","utils/API.js","components/EmployeeTable/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchEmployee","props","Container","textAlign","Form","className","Field","type","value","search","onChange","handleInputChange","AppHeader","Header","as","icon","Icon","name","circular","Content","axios","get","EmployeeTable","state","results","sortOrder","event","setState","target","handleSearch","preventDefault","console","log","sortByFirstName","sortEmployee","sort","a","b","first","reverse","sortByLastName","last","API","then","res","data","catch","err","this","Table","Row","HeaderCell","onClick","filter","list","toLowerCase","includes","map","items","Body","Cell","Image","src","picture","thumbnail","rounded","size","phone","email","login","uuid","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcd31fb8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form,Button,Container} from 'semantic-ui-react'\r\n\r\n\r\nconst SearchEmployee = (props) => {\r\n\r\n\r\n    return (\r\n <Container  textAlign='center'>\r\n        <Form className=\"w-64 text-center\">\r\n        <Form.Field>\r\n          <label> Search Employee</label>\r\n          <input \r\n          type=\"search\" \r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          /> \r\n            \r\n        </Form.Field>\r\n      \r\n      </Form>\r\n      </Container>\r\n      \r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default SearchEmployee\r\n\r\n\r\n","import React from 'react'\r\nimport { Header, Icon, Container } from 'semantic-ui-react';\r\nimport SearchBar from '../SearchEmployee';\r\n\r\nconst AppHeader = () => (\r\n<Container  textAlign='center'>\r\n    <div>\r\n         <Header as='h2' icon textAlign='center' className=\"bg-red-100 border-pink-600\">\r\n            <Icon name='users' circular className=\"bg-purple-100\" />\r\n            <Header.Content className='text-purple-500' >Employee Directory</Header.Content>\r\n        </Header>\r\n      </div>\r\n    </Container>\r\n\r\n)\r\n\r\nexport default AppHeader\r\n","import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the Random User API\r\n\r\nexport default {\r\n    getEmployeeList: function () {\r\n        return axios.get(\"https://randomuser.me/api/?results=50&seed=abc\");\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport SearchEmployee from \"../SearchEmployee/index\";\r\nimport { Table, Icon, Image, Container } from \"semantic-ui-react\";\r\n\r\nclass EmployeeTable extends React.Component {\r\nstate = {\r\n        results: [],\r\n        search: \"\",\r\n        sortOrder: \"\",\r\n        \r\n    };\r\n\r\n    // When the component mounts, get a list of all available Employee\r\n    componentDidMount() {\r\n        API.getEmployeeList()\r\n            .then((res) => this.setState({ results: res.data.results }))\r\n            .catch((err) => console.log(err));\r\n        console.log(\"Employee Data ==>\", this.state.results);\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({ search: event.target.value });\r\n    };\r\n\r\n    handleSearch = (event) => {\r\n        event.preventDefault();\r\n        console.log(\" search text ==>  \" + this.state.search)\r\n    }\r\n\r\n    //sort employee by FirstName\r\n    sortByFirstName = () => {\r\n        const sortEmployee = this.state.results.sort((a, b) => {\r\n            if (b.name.first > a.name.first) { return -1 }\r\n            if (a.name.first > b.name.first) { return 1 }\r\n            return 0;\r\n        });\r\n        if (this.state.sortOrder === \"DESC\") {\r\n            sortEmployee.reverse();\r\n            this.setState({ sortOrder: \"ASC\" });\r\n        } else {\r\n            this.setState({ sortOrder: \"DESC\" });\r\n        }\r\n        this.setState({ results: sortEmployee })\r\n    }\r\n    //sort employee by LastName\r\n    sortByLastName = () => {\r\n        const sortEmployee = this.state.results.sort((a, b) => {\r\n            if (b.name.first > a.name.last) { return -1 }\r\n            if (a.name.first > b.name.last) { return 1 }\r\n            return 0;\r\n        });\r\n        if (this.state.sortOrder === \"DESC\") {\r\n            sortEmployee.reverse();\r\n            this.setState({ sortOrder: \"ASC\" });\r\n        } else {\r\n            this.setState({ sortOrder: \"DESC\" });\r\n        }\r\n        this.setState({ results: sortEmployee })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n<Container  textAlign='center'>\r\n            <div>\r\n            <SearchEmployee\r\n                search={this.state.search}\r\n                handleInputChange={this.handleInputChange}\r\n                handleSearch={this.handleSearch}\r\n                /> \r\n                <Table>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Image</Table.HeaderCell>\r\n                            <Table.HeaderCell>FirstName<Icon name=\"arrow circle up\" onClick={this.sortByFirstName} /></Table.HeaderCell>\r\n                            <Table.HeaderCell>LastName<Icon name=\"arrow circle down\" onClick={this.sortByFirstName} /></Table.HeaderCell>\r\n                            <Table.HeaderCell>Phone</Table.HeaderCell>\r\n                            <Table.HeaderCell>Email</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    {this.state.results.filter((list) => {\r\n                        if(!this.state.search){\r\n                            return list\r\n                        }\r\n                        else if (list.name.first.toLowerCase()\r\n                        .includes(this.state.search.toLowerCase()) ||\r\n                        list.name.last.toLowerCase().includes(this.state.search.toLowerCase()\r\n                        )){\r\n                            return list\r\n                        }\r\n                    })\r\n                    .map(items =>  (\r\n                        <Table.Body>\r\n                            \r\n                            <Table.Row key={items.login.uuid}>\r\n                                <Table.Cell>\r\n                                    <Image src={items.picture.thumbnail} rounded size=\"mini\" />\r\n                                </Table.Cell>\r\n                                <Table.Cell>{items.name.first}</Table.Cell>\r\n                                <Table.Cell>{items.name.last}</Table.Cell>\r\n                                <Table.Cell>{items.phone}</Table.Cell>\r\n                                <Table.Cell>{items.email}</Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    ))}\r\n                </Table>\r\n            </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeeTable;\r\n\r\n\r\n","import React from \"react\";\nimport AppHeader from \"./components/Header\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n    <AppHeader />\n    <EmployeeTable />\n    \n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\n  \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}